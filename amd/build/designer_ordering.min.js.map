{"version":3,"sources":["../src/designer_ordering.js"],"names":["define","$","action","ajax","CSS","EDITINPROGRESS","EDITINGMOVE","SELECTOR","ACTIVITYLI","ACTIONAREA","SECTIONLI","replaceActivityHtmlWith","activityHTML","setTimeout","find","each","id","attr","replaceWith","initActionMenu","css","getModuleId","element","Y","use","Moodle","core_course","util","cm","getId","Node","get","removeSpinner","spinner","delay","window","removeClass","hide","elementid","M","course","coursebase","invoke_function","core","actionmenu","newDOMNode","one","addActivitySpinner","activity","addClass","actionarea","add_spinner","show","init","register_module","set_visibility_resource_ui","args","mainelement","getDOMNode","cmid","sectionreturn","sectionId","closest","promises","call","methodname","sectionid","when","apply","done","data","fail"],"mappings":"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","sourcesContent":["define(['jquery', 'core_course/actions', 'core/ajax'], function($, action, ajax) {\r\n\r\n    var CSS = {\r\n        EDITINPROGRESS: 'editinprogress',\r\n        EDITINGMOVE: 'editing_move'\r\n    };\r\n\r\n    var SELECTOR = {\r\n        ACTIVITYLI: 'li.activity',\r\n        ACTIONAREA: '.actions',\r\n        SECTIONLI: 'li.section',\r\n    };\r\n    /**\r\n     * Implement the init.\r\n     */\r\n    function init() {\r\n\r\n        // Register a function to be executed after D&D of an activity.\r\n        Y.use('moodle-course-coursebase', function() {\r\n\r\n                M.course.coursebase.register_module({\r\n                    // Ignore camelcase eslint rule for the next line because it is an expected name of the callback.\r\n                    // eslint-disable-next-line camelcase\r\n                    set_visibility_resource_ui: function(args) {\r\n                        var mainelement = $(args.element.getDOMNode());\r\n                        var cmid = getModuleId(mainelement);\r\n                        if (cmid) {\r\n                            mainelement.css('opacity', 0);\r\n                            var sectionreturn = mainelement.find('.' + CSS.EDITINGMOVE).attr('data-sectionreturn');\r\n                            var sectionId = mainelement.closest(SELECTOR.SECTIONLI).attr('data-id');\r\n                            var spinner = addActivitySpinner(mainelement);\r\n                            var promises = ajax.call([{\r\n                                methodname: 'format_designer_get_module',\r\n                                args: {id: cmid, sectionid: sectionId, sectionreturn: sectionreturn}\r\n                            }], true);\r\n                            $.when.apply($, promises)\r\n                                .done(function(data) {\r\n                                removeSpinner(mainelement, spinner, 400);\r\n                                    replaceActivityHtmlWith(data);\r\n                                }).fail(function() {\r\n                                    removeSpinner(mainelement, spinner);\r\n                                });\r\n                        }\r\n                    }\r\n\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Replaces the course module with the new html (used to update module after it was edited or its visibility was changed).\r\n     *\r\n     * @param {String} activityHTML\r\n     */\r\n    function replaceActivityHtmlWith(activityHTML) {\r\n        setTimeout(function() {\r\n            $('<div>' + activityHTML + '</div>').find(SELECTOR.ACTIVITYLI).each(function() {\r\n                // Extract id from the new activity html.\r\n                var id = $(this).attr('id');\r\n                // Find the existing element with the same id and replace its contents with new html.\r\n                $(SELECTOR.ACTIVITYLI + '#' + id).replaceWith(activityHTML);\r\n                // Initialise action menu.\r\n                initActionMenu(id);\r\n                $(SELECTOR.ACTIVITYLI + '#' + id).css('opacity', 1);\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    /**\r\n     * Wrapper for Y.Moodle.core_course.util.cm.getId\r\n     *\r\n     * @param {JQuery} element\r\n     * @returns {Integer}\r\n     */\r\n    function getModuleId(element) {\r\n        var id;\r\n        Y.use('moodle-course-util', function(Y) {\r\n            id = Y.Moodle.core_course.util.cm.getId(Y.Node(element.get(0)));\r\n        });\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Removes the spinner element\r\n     *\r\n     * @param {JQuery} element\r\n     * @param {Node} spinner\r\n     * @param {Number} delay\r\n     */\r\n    function removeSpinner(element, spinner, delay) {\r\n        window.setTimeout(function() {\r\n            element.removeClass(CSS.EDITINPROGRESS);\r\n            if (spinner) {\r\n                spinner.hide();\r\n            }\r\n        }, delay);\r\n    }\r\n\r\n    /**\r\n     * Initialise action menu for the element (section or module)\r\n     *\r\n     * @param {String} elementid CSS id attribute of the element\r\n     */\r\n    function initActionMenu(elementid) {\r\n        // Initialise action menu in the new activity.\r\n        Y.use('moodle-course-coursebase', function() {\r\n            M.course.coursebase.invoke_function('setup_for_resource', '#' + elementid);\r\n        });\r\n        if (M.core.actionmenu && M.core.actionmenu.newDOMNode) {\r\n            M.core.actionmenu.newDOMNode(Y.one('#' + elementid));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrapper for M.util.add_spinner for an activity\r\n     *\r\n     * @param {JQuery} activity\r\n     * @returns {Node}\r\n     */\r\n    function addActivitySpinner(activity) {\r\n        activity.addClass(CSS.EDITINPROGRESS);\r\n        var actionarea = activity.find(SELECTOR.ACTIONAREA).get(0);\r\n        if (actionarea) {\r\n            var spinner = M.util.add_spinner(Y, Y.Node(actionarea));\r\n            spinner.show();\r\n            return spinner;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        init: init\r\n    };\r\n});"],"file":"designer_ordering.min.js"}